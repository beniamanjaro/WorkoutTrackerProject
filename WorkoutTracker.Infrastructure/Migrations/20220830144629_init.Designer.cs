// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkoutTracker.Infrastructure;

#nullable disable

namespace WorkoutTracker.Infrastructure.Migrations
{
    [DbContext(typeof(WorkoutContext))]
    [Migration("20220830144629_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Equipment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Exercises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Chest",
                            Equipment = "Bench, Barbell",
                            Name = "Bench Press"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Chest",
                            Equipment = "Cable Machine",
                            Name = "Cable Crossover"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Chest",
                            Equipment = "Bench, Dumbbells",
                            Name = "Dumbbell Flies"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Chest",
                            Equipment = "Bench, Dumbbells",
                            Name = "Dumbbell Press"
                        },
                        new
                        {
                            Id = 5,
                            Category = "Chest",
                            Equipment = "Bench, Barbell",
                            Name = "Incline Benchpress"
                        },
                        new
                        {
                            Id = 6,
                            Category = "Chest",
                            Equipment = "Bench, Dumbbells",
                            Name = "Incline Dumbbell Press"
                        },
                        new
                        {
                            Id = 8,
                            Category = "Legs",
                            Equipment = "Barbell",
                            Name = "Squat"
                        },
                        new
                        {
                            Id = 9,
                            Category = "Legs",
                            Equipment = "",
                            Name = "Calf Raises"
                        },
                        new
                        {
                            Id = 10,
                            Category = "Legs",
                            Equipment = "Barbell",
                            Name = "Front Squat"
                        },
                        new
                        {
                            Id = 11,
                            Category = "Legs",
                            Equipment = "Leg Curls Machine",
                            Name = "Leg Curls"
                        },
                        new
                        {
                            Id = 12,
                            Category = "Legs",
                            Equipment = "Leg Extension Machine",
                            Name = "Leg Extensions"
                        },
                        new
                        {
                            Id = 13,
                            Category = "Legs",
                            Equipment = "Leg Press Machine",
                            Name = "Leg Press"
                        });
                });

            modelBuilder.Entity("WorkoutTracker.Domain.Models.CompletedRoutine", b =>
                {
                    b.Property<int>("CompletedRoutineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompletedRoutineId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CompletedRoutineId");

                    b.HasIndex("UserId");

                    b.ToTable("CompletedRoutines");
                });

            modelBuilder.Entity("WorkoutTracker.Domain.Models.PrimaryMuscle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.ToTable("PrimaryMuscles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExerciseId = 1,
                            Name = "Chest"
                        });
                });

            modelBuilder.Entity("WorkoutTracker.Domain.Models.Routine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DayOrderNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkoutPlanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkoutPlanId");

                    b.ToTable("Routines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DayOrderNumber = 1,
                            Name = "Chest day",
                            WorkoutPlanId = 1
                        });
                });

            modelBuilder.Entity("WorkoutTracker.Domain.Models.SecondaryMuscle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.ToTable("SecondaryMuscle");
                });

            modelBuilder.Entity("WorkoutTracker.Domain.Models.Set", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfReps")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.Property<int>("WorkoutSetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("WorkoutSetId");

                    b.ToTable("Sets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExerciseId = 1,
                            NumberOfReps = 8,
                            Weight = 80,
                            WorkoutSetId = 1
                        },
                        new
                        {
                            Id = 2,
                            ExerciseId = 1,
                            NumberOfReps = 8,
                            Weight = 70,
                            WorkoutSetId = 1
                        },
                        new
                        {
                            Id = 3,
                            ExerciseId = 1,
                            NumberOfReps = 8,
                            Weight = 60,
                            WorkoutSetId = 1
                        },
                        new
                        {
                            Id = 4,
                            ExerciseId = 2,
                            NumberOfReps = 5,
                            Weight = 55,
                            WorkoutSetId = 2
                        },
                        new
                        {
                            Id = 5,
                            ExerciseId = 2,
                            NumberOfReps = 5,
                            Weight = 45,
                            WorkoutSetId = 2
                        });
                });

            modelBuilder.Entity("WorkoutTracker.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SelectedWorkoutPlanId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "email@gmail.com",
                            Password = "test123",
                            Username = "test user"
                        });
                });

            modelBuilder.Entity("WorkoutTracker.Domain.Models.WorkoutPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TimesPerWeek")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("WorkoutPlans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Push Pull Legs",
                            TimesPerWeek = 6,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("WorkoutTracker.Domain.Models.WorkoutSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CompletedRoutineId")
                        .HasColumnType("int");

                    b.Property<int?>("RoutineId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompletedRoutineId");

                    b.HasIndex("RoutineId");

                    b.ToTable("WorkoutSets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoutineId = 1
                        },
                        new
                        {
                            Id = 2,
                            RoutineId = 1
                        });
                });

            modelBuilder.Entity("WorkoutTracker.Domain.Models.CompletedRoutine", b =>
                {
                    b.HasOne("WorkoutTracker.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WorkoutTracker.Domain.Models.PrimaryMuscle", b =>
                {
                    b.HasOne("Exercise", "Exercise")
                        .WithMany("PrimaryMuscles")
                        .HasForeignKey("ExerciseId");

                    b.Navigation("Exercise");
                });

            modelBuilder.Entity("WorkoutTracker.Domain.Models.Routine", b =>
                {
                    b.HasOne("WorkoutTracker.Domain.Models.WorkoutPlan", "WorkoutPlan")
                        .WithMany("Routines")
                        .HasForeignKey("WorkoutPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkoutPlan");
                });

            modelBuilder.Entity("WorkoutTracker.Domain.Models.SecondaryMuscle", b =>
                {
                    b.HasOne("Exercise", "Exercise")
                        .WithMany("SecondaryMuscles")
                        .HasForeignKey("ExerciseId");

                    b.Navigation("Exercise");
                });

            modelBuilder.Entity("WorkoutTracker.Domain.Models.Set", b =>
                {
                    b.HasOne("Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutTracker.Domain.Models.WorkoutSet", null)
                        .WithMany("Sets")
                        .HasForeignKey("WorkoutSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");
                });

            modelBuilder.Entity("WorkoutTracker.Domain.Models.WorkoutPlan", b =>
                {
                    b.HasOne("WorkoutTracker.Domain.Models.User", "User")
                        .WithMany("WorkoutPlans")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WorkoutTracker.Domain.Models.WorkoutSet", b =>
                {
                    b.HasOne("WorkoutTracker.Domain.Models.CompletedRoutine", null)
                        .WithMany("WorkoutSets")
                        .HasForeignKey("CompletedRoutineId");

                    b.HasOne("WorkoutTracker.Domain.Models.Routine", "Routine")
                        .WithMany("WorkoutSets")
                        .HasForeignKey("RoutineId");

                    b.Navigation("Routine");
                });

            modelBuilder.Entity("Exercise", b =>
                {
                    b.Navigation("PrimaryMuscles");

                    b.Navigation("SecondaryMuscles");
                });

            modelBuilder.Entity("WorkoutTracker.Domain.Models.CompletedRoutine", b =>
                {
                    b.Navigation("WorkoutSets");
                });

            modelBuilder.Entity("WorkoutTracker.Domain.Models.Routine", b =>
                {
                    b.Navigation("WorkoutSets");
                });

            modelBuilder.Entity("WorkoutTracker.Domain.Models.User", b =>
                {
                    b.Navigation("WorkoutPlans");
                });

            modelBuilder.Entity("WorkoutTracker.Domain.Models.WorkoutPlan", b =>
                {
                    b.Navigation("Routines");
                });

            modelBuilder.Entity("WorkoutTracker.Domain.Models.WorkoutSet", b =>
                {
                    b.Navigation("Sets");
                });
#pragma warning restore 612, 618
        }
    }
}
